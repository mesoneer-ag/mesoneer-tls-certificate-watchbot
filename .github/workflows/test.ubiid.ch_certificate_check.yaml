name: "Check test-digitalid.ubiid.ch Certificate"

on:
  push:
    branches:
      - main
      - master
  schedule:
    # Run every day at 0:00am
    - cron: '0 0 * * *'

env:
  DOMAIN: 'test-digitalid.ubiid.ch'
  SLACK_CHANNEL: '#ubiid_ops'


jobs:
  check-certificate:
    runs-on: ubuntu-latest
    steps:
      - name: Probe certificate
        id: probe_cert
        run: | 
          notAfter=$(echo \
            | openssl s_client -servername ${{ env.DOMAIN }} -connect ${{ env.DOMAIN }}:443 2>/dev/null \
            | openssl x509 -noout -dates \
            | grep notAfter)
          echo "::set-output name=notAfter::${notAfter/notAfter=/}"

      - name: Show exipration date
        id: debug
        run: |
          echo ${{ steps.probe_cert.outputs.notAfter }}

      - name: Calculate how many days until the certificate expires
        id: calculate_dates_until_expiration
        run: |
          notAfter="${{ steps.probe_cert.outputs.notAfter }}"

          # Copied shamelessly from:
          # https://unix.stackexchange.com/questions/24626/quickly-calculate-date-differences
          datediff() {
            d1=$(date -d "$1" +%s)
            d2=$(date -d "$2" +%s)
            echo $(( (d1 - d2) / 86400 ))
          }

          days=$(datediff "$notAfter" "$(date)")
          echo "${days} to expire"
          echo "::set-output name=daysLeft::${days}"

      - name: Determine if alerts should be sent
        id: should_alert
        uses: actions/github-script@v3
        with:
          script: |
            const domain = "${{ env.DOMAIN }}";
            const notAfter = "${{ steps.probe_cert.outputs.notAfter }}";
            const daysLeft = Number.parseInt('${{ steps.calculate_dates_until_expiration.outputs.daysLeft }}');
            console.log("[info] - Days left until exipiry: " + daysLeft);

            const range = (lower, upper) => ({ contains: (value) => lower <= value && value <= upper });
            const alertingRangesOfDaysLeft = [range(0, 5), range(9, 10), range(19, 20), range(29, 30)];
            const shouldAlert = alertingRangesOfDaysLeft.some(r => r.contains(daysLeft));

            if (shouldAlert == false) {
              return {
                shouldAlert
              }
            }

            slackNotificationPayload = {
              "username" : "ubitec-tls-cert-monitor",
              "icon_url" : "https://avatars3.githubusercontent.com/u/49783738?s=200&v=4",
              "channel": "${{ env.SLACK_CHANNEL }}",
              "blocks" : [
                  {
                      "type" : "section",
                      "text" : {
                          "type" : "mrkdwn",
                          "text" : `:warning: TLS certificate for ${domain} is about to expire`
                      }
                  },
                  {
                      "type" : "divider"
                  },
                  {
                      "type" : "section",
                      "text" : {
                          "type" : "mrkdwn",
                          "text" : `Certificate for domain ${domain} is about to expire on ${notAfter} (in ${daysLeft} days).`
                      }
                  }
              ]
            }

            return {
              shouldAlert: true,
              slackNotificationPayload: JSON.stringify(slackNotificationPayload)
            }


      - name: Send alert to Slack if needed
        id: slack_send
        if: ${{ fromJson(steps.should_alert.outputs.result).shouldAlert }}
        run: |
          curl -X POST \
            --url ${{ secrets.SLACK_WEBHOOK_URL }} \
            -H "Content-Type: application/json" \
            --data '${{ fromJson(steps.should_alert.outputs.result).slackNotificationPayload }}'
